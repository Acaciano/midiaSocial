import * as tslib_1 from "tslib";
import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { CommonModule, registerLocaleData } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { NgxSmartModalModule } from 'ngx-smart-modal';
import { NgbModule } from '@ng-bootstrap/ng-bootstrap';
import { ApiService } from '../core/services/api.service';
import { NoticeService } from '../core/services/notice.service';
import { OccurrenceService } from '../core/services/occurrence.service';
import { ProfileService } from '../core/services/profile.service';
import localePt from '@angular/common/locales/pt';
import { HeaderComponent } from './header.component';
import { MiniDropdownComponent } from '../shared/components/mini-dropdown/mini-dropdown.component';
import { MiniButtonComponent } from '../shared/components/mini-button/mini-button.component';
registerLocaleData(localePt);
var HeaderModule = /** @class */ (function () {
    function HeaderModule() {
    }
    HeaderModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                HeaderComponent,
                MiniDropdownComponent,
                MiniButtonComponent
            ],
            imports: [
                CommonModule,
                FormsModule,
                NgxSmartModalModule.forRoot(),
                NgbModule
            ],
            exports: [
                HeaderComponent,
                MiniButtonComponent
            ],
            schemas: [CUSTOM_ELEMENTS_SCHEMA],
            providers: [
                ApiService,
                NoticeService,
                OccurrenceService,
                ProfileService
            ],
        })
    ], HeaderModule);
    return HeaderModule;
}());
export { HeaderModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FwcC1pcmlzLWhlYWRlci8iLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQWEsc0JBQXNCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFFLFlBQVksRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBR25FLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzFELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNoRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDbEUsT0FBTyxRQUFRLE1BQU0sNEJBQTRCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBQ25HLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBRTdGLGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBMEI3QjtJQUFBO0lBQTRCLENBQUM7SUFBaEIsWUFBWTtRQXhCeEIsUUFBUSxDQUFDO1lBQ1IsWUFBWSxFQUFFO2dCQUNaLGVBQWU7Z0JBQ2YscUJBQXFCO2dCQUNyQixtQkFBbUI7YUFDcEI7WUFDRCxPQUFPLEVBQUU7Z0JBQ1AsWUFBWTtnQkFDWixXQUFXO2dCQUNYLG1CQUFtQixDQUFDLE9BQU8sRUFBRTtnQkFDN0IsU0FBUzthQUNWO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLGVBQWU7Z0JBQ2YsbUJBQW1CO2FBQ3BCO1lBQ0QsT0FBTyxFQUFFLENBQUUsc0JBQXNCLENBQUU7WUFDbkMsU0FBUyxFQUFFO2dCQUNULFVBQVU7Z0JBQ1YsYUFBYTtnQkFDYixpQkFBaUI7Z0JBQ2pCLGNBQWM7YUFDZjtTQUNGLENBQUM7T0FDVyxZQUFZLENBQUk7SUFBRCxtQkFBQztDQUFBLEFBQTdCLElBQTZCO1NBQWhCLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTE9DQUxFX0lELCBDVVNUT01fRUxFTUVOVFNfU0NIRU1BIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSwgcmVnaXN0ZXJMb2NhbGVEYXRhIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgQnJvd3Nlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgTmd4U21hcnRNb2RhbE1vZHVsZSB9IGZyb20gJ25neC1zbWFydC1tb2RhbCc7XHJcbmltcG9ydCB7IE5nYk1vZHVsZSB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQXBpU2VydmljZSB9IGZyb20gJy4uL2NvcmUvc2VydmljZXMvYXBpLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBOb3RpY2VTZXJ2aWNlIH0gZnJvbSAnLi4vY29yZS9zZXJ2aWNlcy9ub3RpY2Uuc2VydmljZSc7XHJcbmltcG9ydCB7IE9jY3VycmVuY2VTZXJ2aWNlIH0gZnJvbSAnLi4vY29yZS9zZXJ2aWNlcy9vY2N1cnJlbmNlLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQcm9maWxlU2VydmljZSB9IGZyb20gJy4uL2NvcmUvc2VydmljZXMvcHJvZmlsZS5zZXJ2aWNlJztcclxuaW1wb3J0IGxvY2FsZVB0IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL3B0JztcclxuaW1wb3J0IHsgSGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9oZWFkZXIuY29tcG9uZW50JztcclxuXHJcbmltcG9ydCB7IE1pbmlEcm9wZG93bkNvbXBvbmVudCB9IGZyb20gJy4uL3NoYXJlZC9jb21wb25lbnRzL21pbmktZHJvcGRvd24vbWluaS1kcm9wZG93bi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNaW5pQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi4vc2hhcmVkL2NvbXBvbmVudHMvbWluaS1idXR0b24vbWluaS1idXR0b24uY29tcG9uZW50JztcclxuXHJcbnJlZ2lzdGVyTG9jYWxlRGF0YShsb2NhbGVQdCk7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgSGVhZGVyQ29tcG9uZW50LFxyXG4gICAgTWluaURyb3Bkb3duQ29tcG9uZW50LFxyXG4gICAgTWluaUJ1dHRvbkNvbXBvbmVudFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBOZ3hTbWFydE1vZGFsTW9kdWxlLmZvclJvb3QoKSxcclxuICAgIE5nYk1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgSGVhZGVyQ29tcG9uZW50LFxyXG4gICAgTWluaUJ1dHRvbkNvbXBvbmVudFxyXG4gIF0sIFxyXG4gIHNjaGVtYXM6IFsgQ1VTVE9NX0VMRU1FTlRTX1NDSEVNQSBdLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgQXBpU2VydmljZSxcclxuICAgIE5vdGljZVNlcnZpY2UsXHJcbiAgICBPY2N1cnJlbmNlU2VydmljZSxcclxuICAgIFByb2ZpbGVTZXJ2aWNlXHJcbiAgXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIEhlYWRlck1vZHVsZSB7IH1cclxuIl19