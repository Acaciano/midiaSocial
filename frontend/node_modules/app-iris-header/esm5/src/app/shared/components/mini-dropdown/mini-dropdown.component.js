import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var INPUT_FIELD_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(function () { return MiniDropdownComponent; }),
    multi: true
};
var MiniDropdownComponent = /** @class */ (function () {
    function MiniDropdownComponent() {
        this.isReadOnly = false;
        this.changeValue = new EventEmitter();
        this.innerValue = '';
        this.onChangeCb = function () { };
        this.onTouchedCb = function () { };
    }
    Object.defineProperty(MiniDropdownComponent.prototype, "value", {
        get: function () {
            return this.innerValue;
        },
        set: function (v) {
            if (v !== this.innerValue) {
                this.innerValue = v;
                this.onChangeCb(v);
            }
        },
        enumerable: true,
        configurable: true
    });
    MiniDropdownComponent.prototype.onBlur = function () {
        this.onTouchedCb;
    };
    MiniDropdownComponent.prototype.writeValue = function (value) {
        if (value !== this.innerValue) {
            this.innerValue = value;
        }
    };
    MiniDropdownComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCb = fn;
    };
    MiniDropdownComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCb = fn;
    };
    MiniDropdownComponent.prototype.setDisabledState = function (isDisabled) {
        this.isReadOnly = isDisabled;
    };
    MiniDropdownComponent.prototype.onChange = function (v) {
        this.changeValue.emit(v);
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Array)
    ], MiniDropdownComponent.prototype, "data", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], MiniDropdownComponent.prototype, "isReadOnly", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], MiniDropdownComponent.prototype, "changeValue", void 0);
    MiniDropdownComponent = tslib_1.__decorate([
        Component({
            selector: 'app-mini-dropdown',
            template: "<select class=\"custom-select d-block w-100 custom-select-iris\" [(ngModel)]=\"value\" (ngModelChange)=\"onChange($event)\">\r\n    <option *ngFor=\"let item of data\" [ngValue]=\"item.id\">{{item.name}}</option>\r\n</select>",
            providers: [INPUT_FIELD_VALUE_ACCESSOR],
            styles: [".custom-select-iris{background-color:#1b7ccb;color:#fff;border-radius:20px;font-size:11px;background-image:url(../../../../assets/img/arrow-down.png);background-size:initial;font-family:Gotham;border:none}"]
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], MiniDropdownComponent);
    return MiniDropdownComponent;
}());
export { MiniDropdownComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWluaS1kcm9wZG93bi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hcHAtaXJpcy1oZWFkZXIvIiwic291cmNlcyI6WyJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL21pbmktZHJvcGRvd24vbWluaS1kcm9wZG93bi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUcsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFHLE1BQU0sZUFBZSxDQUFDO0FBQ3JGLE9BQU8sRUFBd0IsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV6RSxJQUFNLDBCQUEwQixHQUFRO0lBQ3RDLE9BQU8sRUFBRSxpQkFBaUI7SUFDMUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEscUJBQXFCLEVBQXJCLENBQXFCLENBQUM7SUFDcEQsS0FBSyxFQUFFLElBQUk7Q0FDWixDQUFBO0FBUUQ7SUEyQ0U7UUF4Q1MsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUVsQixnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFHbkMsZUFBVSxHQUFRLEVBQUUsQ0FBQztRQXFDN0IsZUFBVSxHQUFvQixjQUFPLENBQUMsQ0FBQztRQUN2QyxnQkFBVyxHQUFvQixjQUFPLENBQUMsQ0FBQztJQUh4QixDQUFDO0lBakNqQixzQkFBSSx3Q0FBSzthQUFUO1lBQ0UsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3pCLENBQUM7YUFFRCxVQUFVLENBQVM7WUFDakIsSUFBRyxDQUFDLEtBQUssSUFBSSxDQUFDLFVBQVUsRUFBQztnQkFDdkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7Z0JBQ3BCLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDcEI7UUFDSCxDQUFDOzs7T0FQQTtJQVNELHNDQUFNLEdBQU47UUFDRSxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQ25CLENBQUM7SUFFRCwwQ0FBVSxHQUFWLFVBQVcsS0FBVTtRQUNuQixJQUFJLEtBQUssS0FBSyxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQzNCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1NBQzNCO0lBQ0gsQ0FBQztJQUVELGdEQUFnQixHQUFoQixVQUFpQixFQUFPO1FBQ3RCLElBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxpREFBaUIsR0FBakIsVUFBa0IsRUFBTztRQUN2QixJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQsZ0RBQWdCLEdBQWhCLFVBQWtCLFVBQWtCO1FBQ2xDLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQy9CLENBQUM7SUFPRCx3Q0FBUSxHQUFSLFVBQVMsQ0FBQztRQUNSLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFoRFE7UUFBUixLQUFLLEVBQUU7O3VEQUFTO0lBQ1I7UUFBUixLQUFLLEVBQUU7OzZEQUFvQjtJQUVsQjtRQUFULE1BQU0sRUFBRTs7OERBQWtDO0lBTGhDLHFCQUFxQjtRQU5qQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsbUJBQW1CO1lBQzdCLDZPQUE2QztZQUU3QyxTQUFTLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQzs7U0FDeEMsQ0FBQzs7T0FDVyxxQkFBcUIsQ0FtRGpDO0lBQUQsNEJBQUM7Q0FBQSxBQW5ERCxJQW1EQztTQW5EWSxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsICBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIGZvcndhcmRSZWYgIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbmNvbnN0IElOUFVUX0ZJRUxEX1ZBTFVFX0FDQ0VTU09SOiBhbnkgPSB7XHJcbiAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXHJcbiAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gTWluaURyb3Bkb3duQ29tcG9uZW50KSxcclxuICBtdWx0aTogdHJ1ZVxyXG59XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1taW5pLWRyb3Bkb3duJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbWluaS1kcm9wZG93bi5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vbWluaS1kcm9wZG93bi5jb21wb25lbnQuY3NzJ10sXHJcbiAgcHJvdmlkZXJzOiBbSU5QVVRfRklFTERfVkFMVUVfQUNDRVNTT1JdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNaW5pRHJvcGRvd25Db21wb25lbnQgaW1wbGVtZW50cyAgQ29udHJvbFZhbHVlQWNjZXNzb3J7XHJcblxyXG4gIEBJbnB1dCgpIGRhdGE6W107XHJcbiAgQElucHV0KCkgaXNSZWFkT25seSA9IGZhbHNlO1xyXG4gIFxyXG4gIEBPdXRwdXQoKSBjaGFuZ2VWYWx1ZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBcclxuXHJcbiAgcHJpdmF0ZSBpbm5lclZhbHVlOiBhbnkgPSAnJztcclxuXHJcbiAgZ2V0IHZhbHVlKCl7XHJcbiAgICByZXR1cm4gdGhpcy5pbm5lclZhbHVlO1xyXG4gIH1cclxuXHJcbiAgc2V0IHZhbHVlKHY6IHN0cmluZyl7XHJcbiAgICBpZih2ICE9PSB0aGlzLmlubmVyVmFsdWUpe1xyXG4gICAgICB0aGlzLmlubmVyVmFsdWUgPSB2O1xyXG4gICAgICB0aGlzLm9uQ2hhbmdlQ2Iodik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBvbkJsdXIoKSB7XHJcbiAgICB0aGlzLm9uVG91Y2hlZENiO1xyXG4gIH1cclxuXHJcbiAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZCB7XHJcbiAgICBpZiAodmFsdWUgIT09IHRoaXMuaW5uZXJWYWx1ZSkge1xyXG4gICAgICAgIHRoaXMuaW5uZXJWYWx1ZSA9IHZhbHVlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZCB7XHJcbiAgICB0aGlzLm9uQ2hhbmdlQ2IgPSBmbjtcclxuICB9XHJcblxyXG4gIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiBhbnkpOiB2b2lkIHtcclxuICAgIHRoaXMub25Ub3VjaGVkQ2IgPSBmbjtcclxuICB9XHJcblxyXG4gIHNldERpc2FibGVkU3RhdGU/KGlzRGlzYWJsZWQ6Ym9vbGVhbikgOiB2b2lkIHtcclxuICAgIHRoaXMuaXNSZWFkT25seSA9IGlzRGlzYWJsZWQ7IFxyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgb25DaGFuZ2VDYjogKF86YW55KSA9PiB2b2lkID0gKCkgPT4ge307XHJcbiAgb25Ub3VjaGVkQ2I6IChfOmFueSkgPT4gdm9pZCA9ICgpID0+IHt9O1xyXG5cclxuICBvbkNoYW5nZSh2KXtcclxuICAgIHRoaXMuY2hhbmdlVmFsdWUuZW1pdCh2KTtcclxuICB9XHJcbn1cclxuIl19